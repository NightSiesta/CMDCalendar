// <auto-generated />
using System;
using CMDCalendar.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMDCalendar.DB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180720144606_AddTaskAndUserTaskTable")]
    partial class AddTaskAndUserTaskTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("CMDCalendar.DB.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("Content");

                    b.Property<int>("Emergency");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("EventDay");

                    b.Property<bool>("IsNotify");

                    b.Property<int>("LeftTime");

                    b.Property<string>("Location");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("CMDCalendar.DB.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("Content");

                    b.Property<int>("Emergency");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("EventDay");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsNotify");

                    b.Property<bool>("IsReapeatable");

                    b.Property<int>("LeftTime");

                    b.Property<string>("Location");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CMDCalendar.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CMDCalendar.DB.UserEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("CMDCalendar.DB.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TaskId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("CMDCalendar.DB.UserEvent", b =>
                {
                    b.HasOne("CMDCalendar.DB.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CMDCalendar.DB.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CMDCalendar.DB.UserTask", b =>
                {
                    b.HasOne("CMDCalendar.DB.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CMDCalendar.DB.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
